{"version":3,"sources":["Components/Repos.js","api/index.js","Components/Nav.js","actions/getRepoAction.js","Components/Profile.js","App.js","reducers/index.js","reducers/getRepo.js","index.js"],"names":["Repos","repos","gotcolor","lang","myData","Object","entries","key","value","getcolor","language","className","name","style","color","icon","faCircle","created_at","href","html_url","target","rel","fetchUser","UserName","axios","get","Nav","DWmode","DarkLighToggle","SetDWMode","dispatch","useDispatch","useState","setUsername","Navbar","bg","variant","Brand","type","id","onChange","htmlFor","e","placeholder","onClick","a","api","data","payload","RepoName","login","response","console","log","message","GetUser","Profile","userData","src","avatar_url","alt","bio","faUsers","followers","following","public_repos","company","faBuilding","location","faMapMarkerAlt","App","user","useSelector","state","Get_user","Get_Repos","length","map","repo","combineReducers","action","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8hIA8BeA,EA1BD,SAAC,GAAY,IAAXC,EAAU,EAAVA,MASf,IAAMC,EAPN,SAAkBC,EAAMC,GACtB,IAAI,IAAI,EAAR,IAAuBC,OAAOC,QAAQF,GAAtC,eAA8C,CAAC,IAAD,sBAArCG,EAAqC,KAAjCC,EAAiC,KAC9C,GAAGL,IAASI,EACV,OAAOC,GAIMC,CARNR,EAAMS,SAQeN,GAChC,OACC,mCACC,qBAAIO,UAAU,uBAAd,UACG,oBAAIA,UAAU,eAAd,SAA8BV,EAAMW,OACpC,qBAAKD,UAAU,OAAf,SACC,kCAAO,cAAC,IAAD,CAAiBE,MAAO,CAACC,MAAMZ,GAAWa,KAAMC,MAAvD,IAAqEf,EAAMS,SAAS,sBAAMC,UAAU,OAAhB,SAAwBV,EAAMgB,kBAEnH,mBAAGC,KAAMjB,EAAMkB,SAAUC,OAAO,SAASC,IAAI,aAA7C,SACA,wBAAQV,UAAU,yBAAlB,+B,kDClBOW,EAAY,SAACC,GAAD,OAAcC,IAAMC,IAAN,uCAA0CF,KCmClEG,EAjCH,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,OAAmBC,GAAmB,EAA9BC,UAA8B,EAAnBD,gBAC1BE,EAAWC,cADkC,EAElBC,mBAAS,IAFS,mBAE5CT,EAF4C,KAElCU,EAFkC,KAWnD,OACE,qCACC,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,UACS,cAACF,EAAA,EAAOG,MAAR,CAAcnB,KAAK,IAAnB,0BAGA,qBAAKP,UAAU,UAAf,SACA,sBAAKA,UAAU,+BAAf,UACP,uBAAO2B,KAAK,WAAW3B,UAAU,uBAAuBH,MAAOmB,EAAQY,GAAG,gBAAgBC,SAAUZ,IACpG,uBAAOjB,UAAU,uBAAuB8B,QAAQ,0BAI7C,sBAAK9B,UAAU,6BAAf,UACL,uBAAOA,UAAU,eAAe2B,KAAK,OAAO9B,MAAOe,EAAUiB,SAtB5C,SAACE,GACpBT,EAAYS,EAAEtB,OAAOZ,QAqBiEmC,YAAY,WAChG,wBAAQhC,UAAU,uBAAuBiC,QAnBzB,WAClBd,ECZqB,SAACP,GAAD,8CAAc,WAAMO,GAAN,mBAAAe,EAAA,+EAEdC,EAAcvB,GAFA,mBAE5BwB,EAF4B,EAE5BA,KACPjB,EAAS,CAACQ,KAAM,aAAcU,QAAQD,KAElCA,EAL+B,iCFAXE,EEMcF,EAAKG,MFNN1B,IAAMC,IAAN,uCAA0CwB,EAA1C,WEAF,OAM5BE,EAN4B,OAOlCrB,EAAS,CAACQ,KAAM,aAAcU,QAAQG,EAASJ,OAPb,0DAUnCK,QAAQC,IAAI,KAAEC,SAVqB,kCFAZ,IAACL,IEAW,qBAAd,sDDYZM,CAAQhC,KAkBf,4BERWiC,EArBC,SAAC,GAAe,IAAdC,EAAa,EAAbA,SACjB,OAAO,mCACL,sBAAK9C,UAAU,8BAAf,UACE,qBAAK+C,IAAKD,EAASE,WAAYhD,UAAU,eAAeiD,IAAI,KAC5D,sBAAKjD,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4B8C,EAASP,QACrC,4BAAG,gCAAQO,EAASxC,eACF,OAAjBwC,EAASI,KAAiB,6BAAKJ,EAASI,MACzC,gCACC,cAAC,IAAD,CAAiB9C,KAAM+C,MAAW,uBAAMnD,UAAU,OAAhB,UAAwB8C,EAASM,UAAjC,kBADnC,IACkG,iCAAON,EAASO,UAAhB,kBADlG,IACiJP,EAASQ,aAD1J,YAGA,qBAAKtD,UAAU,OAAf,SACsB,OAArB8C,EAASS,SAAqB,gCAAK,cAAC,IAAD,CAAiBnD,KAAMoD,MAAc,uBAAMxD,UAAU,OAAhB,UAAwB8C,EAASS,QAAjC,YAElD,OAAtBT,EAASW,UAAsB,gCAAK,cAAC,IAAD,CAAiBrD,KAAMsD,MAAkB,uBAAM1D,UAAU,OAAhB,UAAwB8C,EAASW,SAAjC,mB,MCwBtEE,MAnCf,WACI,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAUA,EAAMC,YACnCzE,EAASuE,aAAY,SAACC,GAAD,OAAUA,EAAME,aAFhC,EAGiB3C,oBAAS,GAH1B,mBAGJL,EAHI,KAGIE,EAHJ,KASb,OACD,sBAAKlB,UAAWgB,EAAS,YAAc,aAAvC,UACG,cAAC,EAAD,CAAKA,OAAQA,EAAQE,UAAWA,EAAWD,eANrB,SAACc,GACnBb,GAAWF,MAME,IAAhB4C,EAAKK,QACF,qBAAKjE,UAAU,iBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,CAAS8C,SAAUc,MAEvB,qBAAK5D,UAAU,oBAAf,SACI,oBAAIA,UAAU,6CAAd,SACKV,EAAM4E,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CAAO7E,MAAO6E,GAAWA,EAAKvC,oBCvB3CwC,cAAgB,CAACL,SCJR,WAAwB,IAAvBH,EAAsB,uDAAf,GAAIS,EAAW,uCAC9C,OAAQA,EAAO1C,MACd,IAAK,aACJ,OAAO0C,EAAOhC,QACf,QACC,OAAOuB,IDDgCI,UCMjB,WAAsB,IAArB1E,EAAoB,uDAAb,GAAI+E,EAAS,uCAC7C,OAAQA,EAAO1C,MACd,IAAK,aACJ,OAAO0C,EAAOhC,QACf,QACC,OAAO/C,MCHJgF,G,MAAQC,YAAYC,EAAUC,YAAQC,YAAgBC,QAE5DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGHS,SAASC,eAAe,W","file":"static/js/main.0e9c5a52.chunk.js","sourcesContent":["import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCircle} from '@fortawesome/free-solid-svg-icons'\nimport myData from '../LangColor.json';\n\nconst Repos = ({repos}) =>{\n\tvar lang = repos.language;\n\tfunction getcolor(lang, myData){\n\t  for(var [key,value] of Object.entries(myData)){\n\t  if(lang === key){\n\t    return value\n\t    }\n\t  }\n\t}\n\tconst gotcolor = getcolor(lang, myData);\n\treturn (\n\t\t<>\n\t\t\t<li className=\"list-group-item py-4\">\n\t\t\t  \t<h3 className=\"text-primary\">{repos.name}</h3>\n\t\t\t  \t<div className=\"pb-2\">\n\t\t\t  \t\t<small><FontAwesomeIcon style={{color:gotcolor}} icon={faCircle} /> {repos.language}<span className=\"pl-5\">{repos.created_at}</span></small>\n\t\t\t  \t</div>\n\t\t\t  \t<a href={repos.html_url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t  \t<button className=\"btn btn-primary btn-sm\">Open Repo</button>\n\t\t\t  \t</a>\n\t\t  </li>\n\t\t</>\n\t)\n}\n\n\nexport default Repos;","import axios from 'axios';\n\nexport const fetchRepo = (RepoName) => axios.get(`https://api.github.com/users/${RepoName}/repos`);\n\nexport const fetchUser = (UserName) => axios.get(`https://api.github.com/users/${UserName}`);\n","import {useState} from 'react';\nimport {Navbar} from 'react-bootstrap';\nimport {useDispatch} from 'react-redux';\nimport {GetUser} from '../actions/getRepoAction';\n\n\nconst Nav = ({DWmode, SetDWMode, DarkLighToggle}) =>{\n\tconst dispatch = useDispatch();\n\tconst [UserName, setUsername ] = useState('');\n\tconst getInputVal = (e) =>{\n\t\tsetUsername(e.target.value);\n\t}\n\n\tconst GetUserFun = () =>{\n\t\tdispatch(GetUser(UserName))\n\t}\n\t\n\treturn(\n\t\t\t<>\n\t\t\t <Navbar bg=\"dark\" variant=\"dark\">\n\t            <Navbar.Brand href=\"/\">\n\t\t           Github Users\n\t            </Navbar.Brand>\n\t            <div className=\"ml-auto\">\n\t            <div className=\"custom-control custom-switch\">\n\t\t\t\t  <input type=\"checkbox\" className=\"custom-control-input\" value={DWmode} id=\"customSwitch1\" onChange={DarkLighToggle}/>\n\t\t\t\t  <label className=\"custom-control-label\" htmlFor=\"customSwitch1\"></label>\n\t\t\t\t</div>\n\t            </div>\n\t        </Navbar>\n\t        <div className=\"container py-3 text-center\">\n\t\t\t\t<input className=\"form-control\" type=\"text\" value={UserName} onChange={getInputVal} placeholder=\"search\"/>\n\t\t\t\t<button className=\"mt-2 btn btn-success\" onClick={GetUserFun}> Search</button>\n\t\t\t</div>\n\t\t\t</>\n\t\t)\n}\n\n\nexport default Nav;","import * as api from '../api';\n\nexport const GetUser = (UserName) => async(dispatch) =>{\n\ttry {\n\t\tconst {data} = await api.fetchUser(UserName);\n\t\tdispatch({type: 'FETCH_USER', payload:data});\n\n\t\tif (data) {\n\t\t\tconst response = await api.fetchRepo(data.login);\n\t\t\tdispatch({type: 'FETCH_REPO', payload:response.data})\n\t\t}\n\t} catch(e) {\n\t\tconsole.log(e.message);\n\t}\n}","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faUsers, faBuilding, faMapMarkerAlt} from '@fortawesome/free-solid-svg-icons';\n\nconst Profile = ({userData}) =>{\n\treturn <>\n\t\t\t<div className=\"card text-secondary bg-dark\">\n\t\t\t  <img src={userData.avatar_url} className=\"card-img-top\" alt=\"\" />\n\t\t\t  <div className=\"card-body\">\n\t\t\t    <h5 className=\"card-title\">{userData.login}</h5>\n\t\t\t    <p><small>{userData.created_at}</small></p>\n\t\t\t    {userData.bio !== null && (<h6>{userData.bio}</h6>)}\n\t\t\t    <div>\n\t\t\t    \t<FontAwesomeIcon icon={faUsers} /><span className=\"pl-2\">{userData.followers} Followers -</span> <span>{userData.following} Following -</span> {userData.public_repos} repos \n\t\t\t    </div>\n\t\t\t    <div className=\"py-2\">\n\t\t\t    {userData.company !== null && (<div><FontAwesomeIcon icon={faBuilding} /><span className=\"pl-2\">{userData.company} </span></div>)}\n\t\t\t  \t</div>\n\t\t\t    {userData.location !== null && (<div><FontAwesomeIcon icon={faMapMarkerAlt} /><span className=\"pl-2\">{userData.location} </span></div>)}\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</>\n}\n\n\nexport default Profile","import {useState} from 'react';\nimport Repos from './Components/Repos';\nimport Nav from './Components/Nav'\nimport Profile from './Components/Profile'\nimport {useSelector} from 'react-redux';\nimport './App.css';\nfunction App() {\n    const user = useSelector((state) =>state.Get_user)\n    const repos  = useSelector((state) =>state.Get_Repos)\n    const [DWmode, SetDWMode] = useState(true);\n\n    const DarkLighToggle =(e) =>{\n        SetDWMode(!DWmode)\n    }\n\n  return (\n\t<div className={DWmode ? 'dark-mode' : 'white-mode'}>\n    <Nav DWmode={DWmode} SetDWMode={SetDWMode} DarkLighToggle={DarkLighToggle} />\n    {user.length !== 0 && (\n        <div className=\"container pt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-4 col-sm-4\">\n                    <Profile userData={user}/>\n                </div>\n                <div className=\"col-md-8 col-sm-8\">\n                    <ul className=\"list-group list-group-flush text-secondary\">\n                        {repos.map((repo)=>(\n                            <Repos repos={repo} key={repo.id} />\n                            ))\n                        }\n                    </ul>\n                    \n                </div>\n            </div>\n        </div>\n        )\t\n    } \n    </div>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\nimport {Get_user, Get_Repos} from './getRepo';\n\n\nexport default combineReducers({Get_user, Get_Repos});","export const Get_user = (user = [], action) => {\n\tswitch (action.type) {\n\t\tcase 'FETCH_USER':\n\t\t\treturn action.payload\n\t\tdefault :\n\t\t\treturn user\n\t}\n}\n\n\nexport const Get_Repos = (repos =[], action)=>{\n\tswitch (action.type) {\n\t\tcase \"FETCH_REPO\":\n\t\t\treturn action.payload\n\t\tdefault:\n\t\t\treturn repos;\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport reducers from './reducers'\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <Provider store={store} >\n\t    <App />\n\t  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\t"],"sourceRoot":""}