{"version":3,"sources":["Components/Repos.js","api/index.js","Components/Nav.js","actions/getRepoAction.js","Components/Profile.js","App.js","reducers/index.js","reducers/getRepo.js","index.js"],"names":["Repos","repos","gotcolor","lang","myData","Object","entries","key","value","getcolor","language","className","name","style","color","icon","faCircle","created_at","href","html_url","target","rel","fetchUser","UserName","axios","get","Nav","dispatch","useDispatch","useState","setUsername","Navbar","bg","variant","Brand","type","onChange","e","placeholder","onClick","a","api","data","payload","RepoName","login","response","console","log","message","GetUser","Profile","userData","src","avatar_url","alt","bio","faUsers","followers","following","public_repos","company","faBuilding","location","faMapMarkerAlt","App","user","useSelector","state","Get_user","Get_Repos","length","map","repo","id","combineReducers","action","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2197edbe.chunk.js","sourcesContent":["import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCircle} from '@fortawesome/free-solid-svg-icons'\nimport myData from '../LangColor.json';\n\nconst Repos = ({repos}) =>{\n\tvar lang = repos.language;\n\tfunction getcolor(lang, myData){\n\t  for(var [key,value] of Object.entries(myData)){\n\t  if(lang === key){\n\t    return value\n\t    }\n\t  }\n\t}\n\tconst gotcolor = getcolor(lang, myData);\n\treturn (\n\t\t<>\n\t\t\t<li className=\"list-group-item py-4\">\n\t\t\t  \t<h3 className=\"text-primary\">{repos.name}</h3>\n\t\t\t  \t<div className=\"pb-2\">\n\t\t\t  \t\t<small><FontAwesomeIcon style={{color:gotcolor}} icon={faCircle} /> {repos.language}<span className=\"pl-5\">{repos.created_at}</span></small>\n\t\t\t  \t</div>\n\t\t\t  \t<a href={repos.html_url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t  \t<button className=\"btn btn-primary btn-sm\">Open Repo</button>\n\t\t\t  \t</a>\n\t\t  </li>\n\t\t</>\n\t)\n}\n\n\nexport default Repos;","import axios from 'axios';\n\nexport const fetchRepo = (RepoName) => axios.get(`https://api.github.com/users/${RepoName}/repos`);\n\nexport const fetchUser = (UserName) => axios.get(`https://api.github.com/users/${UserName}`);\n","import {useState} from 'react';\nimport {Navbar} from 'react-bootstrap';\nimport {useDispatch} from 'react-redux';\nimport {GetUser} from '../actions/getRepoAction';\n\n\nconst Nav = () =>{\n\tconst dispatch = useDispatch();\n\tconst [UserName, setUsername ] = useState('');\n\n\tconst getInputVal = (e) =>{\n\t\tsetUsername(e.target.value);\n\t}\n\n\tconst GetUserFun = () =>{\n\t\tdispatch(GetUser(UserName))\n\t}\n\treturn(\n\t\t\t<>\n\t\t\t <Navbar bg=\"dark\" variant=\"dark\">\n\t            <Navbar.Brand href=\"/\">\n\t\t           Github Users\n\t            </Navbar.Brand>\n\t        </Navbar>\n\t        <div className=\"container py-3 text-center\">\n\t\t\t\t<input className=\"form-control\" type=\"text\" value={UserName} onChange={getInputVal} placeholder=\"search\"/>\n\t\t\t\t<button className=\"mt-2 btn btn-success\" onClick={GetUserFun}> Search</button>\n\t\t\t</div>\n\t\t\t</>\n\t\t)\n}\n\n\nexport default Nav;","import * as api from '../api';\n\nexport const GetUser = (UserName) => async(dispatch) =>{\n\ttry {\n\t\tconst {data} = await api.fetchUser(UserName);\n\t\tdispatch({type: 'FETCH_USER', payload:data});\n\n\t\tif (data) {\n\t\t\tconst response = await api.fetchRepo(data.login);\n\t\t\tdispatch({type: 'FETCH_REPO', payload:response.data})\n\t\t}\n\t} catch(e) {\n\t\tconsole.log(e.message);\n\t}\n}","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faUsers, faBuilding, faMapMarkerAlt} from '@fortawesome/free-solid-svg-icons';\n\nconst Profile = ({userData}) =>{\n\treturn <>\n\t\t\t<div className=\"card text-secondary bg-dark\">\n\t\t\t  <img src={userData.avatar_url} className=\"card-img-top\" alt=\"\" />\n\t\t\t  <div className=\"card-body\">\n\t\t\t    <h5 className=\"card-title\">{userData.login}</h5>\n\t\t\t    <p><small>{userData.created_at}</small></p>\n\t\t\t    {userData.bio !== null && (<h6>{userData.bio}</h6>)}\n\t\t\t    <div>\n\t\t\t    \t<FontAwesomeIcon icon={faUsers} /><span className=\"pl-2\">{userData.followers} Followers -</span> <span>{userData.following} Following -</span> {userData.public_repos} repos \n\t\t\t    </div>\n\t\t\t    <div className=\"py-2\">\n\t\t\t    {userData.company !== null && (<div><FontAwesomeIcon icon={faBuilding} /><span className=\"pl-2\">{userData.company} </span></div>)}\n\t\t\t  \t</div>\n\t\t\t    {userData.location !== null && (<div><FontAwesomeIcon icon={faMapMarkerAlt} /><span className=\"pl-2\">{userData.location} </span></div>)}\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</>\n}\n\n\nexport default Profile","import Repos from './Components/Repos';\nimport Nav from './Components/Nav'\nimport Profile from './Components/Profile'\nimport {useSelector} from 'react-redux';\n\nfunction App() {\n    const user = useSelector((state) =>state.Get_user)\n    const repos  = useSelector((state) =>state.Get_Repos)\n  return (\n\t<>\n    <Nav />\n    {user.length !== 0 && (\n        <div className=\"container pt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-4 col-sm-4\">\n                    <Profile userData={user}/>\n                </div>\n                <div className=\"col-md-8 col-sm-8\">\n                    <ul className=\"list-group list-group-flush text-secondary\">\n                        {repos.map((repo)=>(\n                            <Repos repos={repo} key={repo.id} />\n                            ))\n                        }\n                    </ul>\n                    \n                </div>\n            </div>\n        </div>\n        )\t\n    } \n    </>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\nimport {Get_user, Get_Repos} from './getRepo';\n\n\nexport default combineReducers({Get_user, Get_Repos});","export const Get_user = (user = [], action) => {\n\tswitch (action.type) {\n\t\tcase 'FETCH_USER':\n\t\t\treturn action.payload\n\t\tdefault :\n\t\t\treturn user\n\t}\n}\n\n\nexport const Get_Repos = (repos =[], action)=>{\n\tswitch (action.type) {\n\t\tcase \"FETCH_REPO\":\n\t\t\treturn action.payload\n\t\tdefault:\n\t\t\treturn repos;\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport reducers from './reducers'\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <Provider store={store} >\n\t    <App />\n\t  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\t"],"sourceRoot":""}